{"version":3,"sources":["redux/actions.js","redux/reduser.js","redux/store.js","redux/selector.js","Components/ContactForm/ContactForm.styled.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.js","Components/ContactList/ContactList.jsx","Components/Filter/Filter.styled.js","Components/Filter/Filter.jsx","Components/Section/Section.styled.js","Components/Section/Section.jsx","App.jsx","index.js"],"names":["addContact","createAction","name","number","payload","id","uuid","deleteContact","changeFilter","contacts","createReducer","actions","state","filter","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","rootReducer","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistor","persistStore","getContacts","getFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","Forma","styled","form","Input","input","Label","label","Button","button","span","ContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","resetName","resetNumber","onSubmit","event","preventDefault","includeName","reduce","acc","contact","includeNumber","alert","newContact","type","value","placeholder","onChange","currentTarget","pattern","maxLength","TextContacts","List","ul","Item","li","Btn","ContactList","map","size","onClick","onDeleteContact","InputFilter","LabelFilter","Filter","target","Container","div","Section","children","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.9a99acb2.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\nimport { v4 as uuid } from \"uuid\";\n\nexport const addContact = createAction(\"contacts/add\", (name, number) => ({\n  payload: {\n    id: uuid(),\n    name,\n    number,\n  },\n}));\n\nexport const deleteContact = createAction(\"contacts/delete\");\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n// REDUX - 1\n// import * as actionTypes from \"./types\";\n\n// export const addContact = (name, number) => ({\n//   type: actionTypes.ADD_CONTACT,\n//   payload: {\n//     id: uuid(),\n//     name,\n//     number,\n//   },\n// });\n\n// export const changeFilter = (value) => ({\n//   type: actionTypes.CHANGE_FILTER,\n//   payload: value,\n// });\n\n// export const deleteContact = (contactId) => ({\n//   type: actionTypes.DELETE_CONTACT,\n//   payload: contactId,\n// });\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\n\n//TOOLKIT - 2\nconst contacts = createReducer(\n  [\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ],\n  {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter(({ id }) => id !== payload),\n  }\n);\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n\n// //REDUX - 1\n// import { combineReducers } from \"redux\";\n// import * as actionTypes from \"./types\";\n\n// const contacts = (\n//   state = [\n//     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n//     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n//     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n//     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n//   ],\n//   { type, payload }\n// ) => {\n//   switch (type) {\n//     case actionTypes.ADD_CONTACT:\n//       return [...state, payload];\n//     case actionTypes.DELETE_CONTACT:\n//       return state.filter(({ id }) => id !== payload);\n//     default:\n//       return state;\n//   }\n// };\n\n// const filter = (state = \"\", { type, payload }) => {\n//   switch (type) {\n//     case actionTypes.CHANGE_FILTER:\n//       return payload;\n//     default:\n//       return;\n//   }\n// };\n\n// export default combineReducers({\n//   contacts,\n//   filter,\n// });\n","import {\n  configureStore,\n  getDefaultMiddleware,\n  combineReducers,\n} from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\nimport phonebookReducer from \"./reduser\";\n\n//TOOLKIT - 2\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistConfig = {\n  key: \"contacts\",\n  storage,\n  blacklist: [\"filter\"],\n};\n\nconst rootReducer = combineReducers({\n  contacts: phonebookReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nexport const persistor = persistStore(store);\n","export const getContacts = (state) => state.contacts.contacts;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n\n  return contacts.filter(({ name }) =>\n    name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import styled from \"@emotion/styled\";\n\nexport const Forma = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 0px;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  border-radius: 3px;\n  border: none;\n  outline: none;\n  font-size: 14px;\n  padding: 3px;\n`;\n\nexport const Label = styled.label`\n  display: inline-flex;\n  justify-content: space-between;\n  margin-top: 20px;\n  font-size: 18px;\n  font-weight: 400;\n`;\n\nexport const Button = styled.button`\n  width: max-content;\n  margin-right: auto;\n  margin-left: auto;\n  margin-top: 30px;\n  cursor: pointer;\n  padding: 10px 15px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  color: rgb(29, 126, 0);\n  background-color: rgb(141, 190, 212);\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\n  &:hover {\n    background-color: rgb(177 117 250);\n    color: #fff;\n    transform: scale(1.05);\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const Error = styled.span`\n  top: 100px;\n  bottom: 0px;\n  color: coral;\n  margin-bottom: 10px;\n  font-size: 10px;\n  font-weight: 400;\n`;\n","import React, {useState} from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\nimport { getContacts } from '../../redux/selector';\r\nimport { MdPerson } from \"react-icons/md\";\r\nimport { MdStayPrimaryPortrait } from \"react-icons/md\";\r\nimport { Forma, Input, Label, Button } from './ContactForm.styled'\r\n\r\n\r\n\r\n//TOOLKIT - 2\r\nexport default function ContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const newContact = () => {\r\n    const includeName = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.name],\r\n      [],\r\n    );\r\n    const includeNumber = contacts.reduce(\r\n      (acc, contact) => [...acc, contact.number],\r\n      [],\r\n    );\r\n\r\n    if (name === '' || number === '') {\r\n      alert('Please enter all fields!');\r\n      return true;\r\n    }\r\n\r\n    if (includeName.includes(name)) {\r\n      alert(`${name} is already in contacts`);\r\n      return true;\r\n    } else if (includeNumber.includes(number)) {\r\n      alert(`${number} is already in contacts`);\r\n      return true;\r\n    }\r\n  };\r\n\r\n  const handleChangeName = event => {\r\n    setName(event.currentTarget.value);\r\n  };\r\n\r\n  const handleChangeNumber = event => {\r\n    setNumber(event.currentTarget.value);\r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    resetName();\r\n    resetNumber();\r\n\r\n    if (newContact()) {\r\n      return;\r\n    }\r\n\r\n    dispatch(actions.addContact(name, number));\r\n  };\r\n\r\n  const resetName = () => {\r\n    setName('');\r\n  };\r\n  const resetNumber = () => {\r\n    setNumber('');\r\n  };\r\n\r\n  \r\n    return (\r\n      <Forma onSubmit={handleSubmit}>\r\n        <Label >\r\n          <MdPerson></MdPerson>\r\n          Name\r\n          <Input\r\n            \r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            placeholder=\"Oleksandr Vasylchuk\"\r\n            onChange={handleChangeName}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            maxLength=\"33\"\r\n          />\r\n        </Label>\r\n\r\n        <Label >\r\n          <MdStayPrimaryPortrait></MdStayPrimaryPortrait>\r\n          Number\r\n          <Input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={number}\r\n            placeholder=\"000-00-00\"\r\n            onChange={handleChangeNumber}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            maxLength=\"20\"\r\n          />\r\n        </Label>\r\n        <Button  type=\"submit\">\r\n          Add contact\r\n        </Button>\r\n      </Forma>\r\n    );\r\n}\r\n\r\n\r\n// REDUX - 1\r\n// import { connect } from 'react-redux';\r\n// const mapStateToProps = state => ({\r\n//   contacts: state.contacts.contacts,\r\n// });\r\n\r\n// const mapToDispatchToProps = dispatch => ({\r\n//   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapToDispatchToProps)(ContactForm);\r\n\r\n// export default function ContactForm({onSubmit}) {\r\n//  const [name, setName] = useState('');\r\n//   const [number, setNumber] = useState('');\r\n\r\n//   const handleChangeName = event => {\r\n//     setName(event.currentTarget.value);\r\n//   };\r\n\r\n//   const handleChangeNumber = event => {\r\n//     setNumber(event.currentTarget.value);\r\n//   };\r\n\r\n//   const handleSubmit = event => {\r\n//     event.preventDefault();\r\n\r\n//     onSubmit(name, number);\r\n//     resetName();\r\n//     resetNumber();\r\n//   };\r\n\r\n//   const resetName = () => {\r\n//     setName('');\r\n//   };\r\n\r\n//   const resetNumber = () => {\r\n//     setNumber('');\r\n//   };\r\n\r\n\r\n//     return (\r\n//       <Forma onSubmit={handleSubmit}>\r\n//         <Label >\r\n//           <MdPerson></MdPerson>\r\n//           Name\r\n//           <Input\r\n            \r\n//             type=\"text\"\r\n//             name=\"name\"\r\n//             value={name}\r\n//             placeholder=\"Oleksandr Vasylchuk\"\r\n//             onChange={handleChangeName}\r\n//             pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n//             maxLength=\"33\"\r\n//           />\r\n//         </Label>\r\n\r\n//         <Label >\r\n//           <MdStayPrimaryPortrait></MdStayPrimaryPortrait>\r\n//           Number\r\n//           <Input\r\n//             type=\"tel\"\r\n//             name=\"number\"\r\n//             value={number}\r\n//             placeholder=\"000-00-00\"\r\n//             onChange={handleChangeNumber}\r\n//             pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n//             maxLength=\"20\"\r\n//           />\r\n//         </Label>\r\n//         <Button  type=\"submit\">\r\n//           Add contact\r\n//         </Button>\r\n//       </Forma>\r\n//     );\r\n  \r\n// }\r\n","import styled from \"@emotion/styled\";\n\nexport const TextContacts = styled.span`\n  max-width: 225px;\n`;\n\nexport const List = styled.ul`\n  padding: 0;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  justify-content: space-between;\n  font-size: 16px;\n  & svg {\n    margin-right: 10px;\n  }\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Btn = styled.button`\n  margin-left: 20px;\n  cursor: pointer;\n  padding: 5px 5px;\n  border: none;\n  outline: none;\n  border-radius: 5px;\n  box-shadow: 2px 2px 2px rgba(0, 0, 0, 0.3);\n  transition: transform 0.25s cubic-bezier(0.77, 0, 0.175, 1);\n\n  &:hover {\n    background-color: #7a1212;\n    color: #fff;\n    transform: scale(1.05);\n    border: none;\n    outline: none;\n  }\n`;\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getVisibleContacts } from '../../redux/selector';\r\nimport { FiPhone } from 'react-icons/fi';\r\nimport * as actions from '../../redux/actions';\r\nimport { List, Item, Btn, TextContacts } from './ContactList.styled'\r\n\r\n\r\n\r\n\r\n\r\n\r\n//TOOLKIT - 2\r\nexport default function ContactList() {\r\n  const contacts = useSelector(getVisibleContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n\r\n\r\n\r\n\r\n    return (\r\n      <List>\r\n        {contacts.map(({ name, number, id }) =>\r\n                \r\n          <Item key={id}>\r\n            <TextContacts>\r\n              <FiPhone size=\"15\" />\r\n              {name}: {number}\r\n            </TextContacts>\r\n            <Btn\r\n              type=\"button\"\r\n              onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </Btn>\r\n          </Item>\r\n        )}\r\n\r\n      </List>\r\n    )\r\n  \r\n}\r\n//REDUX - 1\r\n// import { connect } from 'react-redux';\r\n\r\n// const getVisibleContacts = (allContacts, filter) => {\r\n//   const normalizedFilter = filter.toLowerCase();\r\n\r\n//   return allContacts.filter(({ name }) =>\r\n//     name.toLowerCase().includes(normalizedFilter),\r\n//   );\r\n// };\r\n\r\n// const mapStateToProps = ({ contacts: { contacts, filter } }) => ({\r\n//   contacts: getVisibleContacts(contacts, filter),\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import styled from \"@emotion/styled\";\n\nexport const InputFilter = styled.input`\n  height: 25px;\n  border-radius: 3px;\n  margin-top: 10px;\n  border: none;\n  outline: none;\n  margin-bottom: 20px;\n \n  }\n  padding: 3px;\n`;\n\nexport const LabelFilter = styled.label`\n  font-style: italic;\n  color: rgb(245, 229, 139);\n  font-size: 18px;\n  font-weight: 600;\n  & svg {\n    margin-right: 10px;\n  }\n`;\n\nexport const Icon = styled.span``;\n","import { VscSearch } from \"react-icons/vsc\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/selector';\r\nimport * as actions from '../../redux/actions';\r\nimport { InputFilter, LabelFilter } from './Filter.styled'\r\n\r\n//TOOLKIT - 2\r\nexport default function Filter() {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = event => dispatch(actions.changeFilter(event.target.value));\r\n\r\n\r\n  \r\n    return (\r\n      <LabelFilter>\r\n        <VscSearch></VscSearch>\r\n        Find contacts by name\r\n        <InputFilter\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={onChange}\r\n          placeholder=\"Rosie Simpson\"\r\n        />\r\n           \r\n            \r\n      </LabelFilter>\r\n    )\r\n  \r\n}\r\n  \r\n//   //REDUX - 1\r\n// import { connect } from 'react-redux';\r\n\r\n// const mapStateToProps = state => ({\r\n//   value: state.contacts.filter,\r\n// });\r\n\r\n// const mapDispatchToProps = dispatch => ({\r\n//   onChange: event => dispatch(actions.changeFilter(event.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Filter);","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  max-width: 350px;\n  margin-top: 30px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 15px 20px;\n  background-image: url(https://sdelatlending.ru/wp-content/themes/xmarkup/img/old-wall.png);\n  background-color: rgb(39, 39, 110);\n  border: 2mm ridge rgba(170, 50, 220, 0.6);\n  box-shadow: 0 5px 5px rgba(0, 0, 0, 0.55);\n  border-radius: 15px;\n`;\n","import PropTypes from 'prop-types'\r\nimport {Container} from './Section.styled'\r\n\r\nexport default function Section({ children }) {\r\n    return <Container>{ children}</Container>\r\n\r\n}\r\n\r\nSection.propTypes = {\r\n    children: PropTypes.node.isRequired\r\n}","import React from \"react\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Section from \"./Components/Section/Section\";\n\n\n\nfunction App() {\n   return (\n      <>\n       <Section>\n        <h1>Phonebook</h1>\n        <ContactForm/>\n\n        <h2>Contacts</h2>\n         <Filter />\n         \n        <ContactList/>\n      </Section>\n      </>\n    );\n}\n\nexport default App;\n// function useLocalStorage(key, defaultValue) {\n//   const [state, setState] = useState(() => {\n//     return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n//   });\n\n//   useEffect(() => {\n//     window.localStorage.setItem(key, JSON.stringify(state));\n//   }, [key, state]);\n\n//   return [state, setState];\n// }\n\n\n// export default function App() {\n \n \n//   const [contacts, setContacts] = useLocalStorage('contacts', [\n//     { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n//     { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//     { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//     { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n//   ]);\n\n//   const [filter, setFilter] = useState('');\n\n//   const addContact = (name, number) => {\n//     const item = {\n//       id: uuid(),\n//       name,\n//       number,\n//     };\n\n//     const includeName = contacts.reduce(\n//       (acc, contact) => [...acc, contact.name],\n//       [],\n//     );\n//     const includeNumber = contacts.reduce(\n//       (acc, contact) => [...acc, contact.number],\n//       [],\n//     );\n\n//     if (name === '' || number === '') {\n//       alert('Please enter all fields!');\n//       return;\n//     }\n\n//     if (includeName.includes(name)) {\n//       alert(`${name} is already in contacts`);\n//       return;\n//     } else if (includeNumber.includes(number)) {\n//       alert(`${number} is already in contacts`);\n//     } else {\n//       setContacts(contacts => [item, ...contacts]);\n//     }\n//   };\n\n//   const getVisibleContacts = () => {\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   };\n\n//   const deleteContact = contactId => {\n//     setContacts(prevState =>\n//       prevState.filter(contact => contact.id !== contactId),\n//     );\n//   };\n\n//   const changeFilter = event => {\n//     setFilter(event.currentTarget.value);\n//   };  \n  \n// }\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}